#!/usr/bin/env bash

opts=$(getopt -o s:p: --long population:,study-name:,r2Filter: -n 'imputationserver' -- "$@")

exit_code=$?

if [ ${exit_code} -ne 0 ]; then
    exit ${exit_code}
fi

eval set -- "$opts"

verbose=1

while true; do
    case "$1" in
    -s | --study-name)
        case "$2" in
        "") shift 2 ;;
        *)
            study_name=$2
            shift 2
            ;;
        esac
        ;;
    -p | --population)
        case "$2" in
        "") shift 2 ;;
        *)
            population=$2
            shift 2
            ;;
        esac
        ;;
    --r2Filter)
        case "$2" in
        "") shift 2 ;;
        *)
            r2Filter=$2
            shift 2
            ;;
        esac
        ;;
    --)
        shift
        break
        ;;
    *)
        echo "Internal error!"
        exit 1
        ;;
    esac
done

fail() {
    printf '%s\n' "$1" >&2
    exit "${2-1}"
}

if [[ ! -v study_name ]]; then
    fail "Missing required --study-name parameter"
fi

if [[ ! -v population ]]; then
    fail "Missing required --population parameter"
fi

run_cmd() {
    cmd="$*"

    printf '%s\n' --------------------

    if [ "$verbose" = "1" ]; then
        printf "%s\n" "${cmd}"
    fi

    ("$@")

    exit_code=$?

    if [[ ${exit_code} -gt 0 ]]; then
        echo "ERROR: command exited with nonzero status ${exit_code}"
    fi

    printf '%s\n' --------------------

    return ${exit_code}
}

# code starts here

export PATH=/data/cloudgene:${PATH}
export HADOOP_CONF_DIR=/data/hadoop/config

extra_flags=""
if [ "$verbose" = "1" ]; then
    extra_flags="${extra_flags} --show-log --show-out"
fi
if [ ! -z "${r2Filter}" ]; then
    extra_flags="${extra_flags} --r2Filter ${r2Filter}"
fi

if [ -z "${USER}" ]; then
    USER=$(whoami)
    export USER
fi

run_cmd mkdir -p -v "/data/output/${study_name}"

run_cmd cloudgene run imputationserver \
    --conf ${HADOOP_CONF_DIR} \
    --refpanel "1000g-phase-3-v5" \
    --population "${population}" \
    --files "/data/input/${study_name}" \
    --output "/data/output/${study_name}" \
    --user "${USER}" "${extra_flags}"
