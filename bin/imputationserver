#!/usr/bin/env bash

OPTS=`getopt -o s:p: --long population:,study-name: -n 'imputationserver' -- "$@"`
eval set -- "$OPTS"

VERBOSE=1

while true ; do
    case "$1" in
        -s|--study-name)
            case "$2" in
                "") shift 2 ;;
                *) STUDY_NAME=$2 ; shift 2 ;;
            esac ;;
        -p|--population)
            case "$2" in
                "") shift 2 ;;
                *) POPULATION=$2 ; shift 2 ;;
            esac ;;
        --) shift ; break ;;
        *) echo "Internal error!" ; exit 1 ;;
    esac
done

fail() {
    printf '%s\n' "$1" >&2    
    exit "${2-1}"  
}

if [[ ! -v STUDY_NAME ]]; then
    fail "Missing required --study-name parameter"
fi

if [[ ! -v POPULATION ]]; then
    fail "Missing required --population parameter"
fi

run_cmd() {
    cmd="$*"

    printf '%s\n' --------------------

    if [ "$VERBOSE" = "1" ]; then
	printf "$cmd\n"
    fi

    ( "$@" )

    EXIT_CODE=$?

    if [[ $EXIT_CODE -gt 0 ]]; then
	echo "ERROR: command exited with nonzero status $EXIT_CODE"
    fi

    printf '%s\n' --------------------

    return $EXIT_CODE
}

# code starts here

export PATH=/data/cloudgene:${PATH}
export HADOOP_CONF_DIR=/data/hadoop/config

EXTRA_FLAGS=""
if [ "$VERBOSE" = "1" ]; then
    EXTRA_FLAGS="--show-log --show-out"
fi

run_cmd mkdir -p -v /data/output/${STUDY_NAME}

run_cmd cloudgene run imputationserver \
    --conf ${HADOOP_CONF_DIR} \
    --refpanel "1000g-phase-3-v5" \
    --population ${POPULATION} \
    --files "/data/input/${STUDY_NAME}" \
    --output "/data/output/${STUDY_NAME}" \
    --user ${USER} ${EXTRA_FLAGS}
