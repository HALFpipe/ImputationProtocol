#!/bin/bash

verbose=1

run_cmd() {
    command="$*"

    printf '%s\n' --------------------

    if [ "${verbose}" = "1" ]; then
        printf "%s\n" "${command}"
    fi

    eval "${command}"

    exit_code=$?

    if [[ $exit_code -gt 0 ]]; then
        echo "ERROR: command exited with nonzero status $exit_code"
    fi

    printf '%s\n' --------------------

    return $exit_code
}

fail() {
    printf '%s\n' "$1" >&2
    exit "${2-1}"
}

# code starts here

export PATH=/data/cloudgene:${PATH}
export HADOOP_CONF_DIR=/data/hadoop/config
if [ -z "$USER" ]; then
    USER=$(whoami)
fi

run_cmd rm -rf /data/cloudgene
run_cmd mkdir -p -v /data/cloudgene /data/downloads
run_cmd cp -rnv /opt/cloudgene/* /data/cloudgene/

run_cmd "cat <<EOF > /data/cloudgene/cloudgene.conf
settings: /data/cloudgene/settings.yaml
database: /data/cloudgene/database/cloudgene
version: /data/cloudgene/version.txt
apps: /data/cloudgene/apps
workspace: /data/cloudgene/jobs
pages: /data/cloudgene/pages
EOF"

run_cmd "cat <<EOF > /data/cloudgene/settings.yaml
cluster:
   name: Local cluster
   conf: ${HADOOP_CONF_DIR}
   type: hadoop
   user: ${USER}
EOF"

if ! run_cmd cloudgene verify-cluster; then
    fail "ERROR: Cloudgene could not connect to the Hadoop cluster. Please check if \"setup-hadoop\" was run successfully"
fi
if ! run_cmd cloudgene install /localdata/imputationserver.zip; then
    fail "ERROR: Cloudgene could not install the imputation server"
fi
if ! run_cmd cloudgene install /localdata/1000genomes-phase3.zip; then
    fail "ERROR: Cloudgene could not install the reference genome"
fi

run_cmd "sed -i \"s/value: auto/value: password/g\" /data/cloudgene/apps/imputationserver/*/*.yaml"

run_cmd find /data/cloudgene/apps -type d -exec chmod ugo+w {} + # need to be writable because it will be used as a temp dir
run_cmd find /data/cloudgene/apps -type f -exec chmod ugo-w {} + # should not be writable, or cloudgene will delete the files after import to hadoop hdfs

run_cmd mkdir -p -v /data/input /data/output
