#!/usr/bin/env bash

OPTS=$(getopt -o s:b: --long study-name:,bfile: -n 'enigma-qc' -- "$@")
eval set -- "$OPTS"

verbose=1

while true; do
    case "$1" in
    -b | --bfile)
        case "$2" in
        "") shift 2 ;;
        *)
            bfile=$2
            shift 2
            ;;
        esac
        ;;
    -s | --study-name)
        case "$2" in
        "") shift 2 ;;
        *)
            study_name=$2
            shift 2
            ;;
        esac
        ;;
    --)
        shift
        break
        ;;
    *)
        echo "Internal error!"
        exit 1
        ;;
    esac
done

fail() {
    printf '%s\n' "$1" >&2
    exit "${2-1}"
}

if [[ ! -v study_name ]]; then
    fail "missing required --study-name parameter"
fi

if [[ ! -v bfile ]]; then
    fail "Missing required --bfile parameter"
fi

run_cmd() {
    cmd="$*"

    printf '%s\n' --------------------

    if [ "${verbose}" = "1" ]; then
        printf "%s\n" "${cmd}"
    fi

    # shellcheck disable=SC2294
    eval "$@"

    exit_code=$?

    if [[ ${exit_code} -gt 0 ]]; then
        echo "ERROR: command exited with nonzero status ${exit_code}"
    fi

    printf '%s\n' --------------------

    return ${exit_code}
}

# code starts here

vcf_directory=/data/input/${study_name}
run_cmd mkdir -p -v "${vcf_directory}"

run_cmd "sed 's/\r$//' ${bfile}.bim | \
    awk '((\$5 == \"A\" && \$6 == \"T\") || \
          (\$5 == \"T\" && \$6 == \"A\") || \
          (\$5 == \"G\" && \$6 == \"C\") || \
          (\$5 == \"C\" && \$6 == \"G\")) { print \$2 }' > ambiguous"

out="lastQC"
run_cmd plink2 --bfile "${bfile}" \
    --nonfounders \
    --out "${out}" \
    --exclude "ambiguous" \
    --maf 0.01 \
    --hwe 0.000001 \
    --geno 0.5 \
    --mind 0.5 \
    --make-bed
bfile="${out}"

genome="b37"
out="${bfile}${genome}"
run_cmd plink2 --bfile "${bfile}" \
    --nonfounders \
    --out "${out}" \
    --set-all-var-ids "@:#" \
    --rm-dup "exclude-mismatch" \
    --split-par "${genome}" \
    --set-hh-missing \
    --make-bed
bfile="${out}"

for c in {1..22} X; do
    run_cmd plink2 --bfile "${bfile}" \
        --nonfounders \
        --out "chr${c}" \
        --chr "${c}" \
        --export "vcf-4.2"
    run_cmd "vcf-sort chr${c}.vcf | bgzip -c > ${vcf_directory}/chr${c}.vcf.gz"
done
