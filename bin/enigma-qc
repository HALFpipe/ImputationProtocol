#!/usr/bin/env bash

OPTS=`getopt -o s:b: --long study-name:,bfile: -n 'enigma-qc' -- "$@"`
eval set -- "$OPTS"

VERBOSE=1

while true ; do
    case "$1" in
        -b|--bfile)
            case "$2" in
                "") shift 2 ;;
                *) BFILE=$2 ; shift 2 ;;
            esac ;;
        -s|--study-name)
            case "$2" in
                "") shift 2 ;;
                *) STUDY_NAME=$2 ; shift 2 ;;
            esac ;;
        --) shift ; break ;;
        *) echo "Internal error!" ; exit 1 ;;
    esac
done

fail() {
    printf '%s\n' "$1" >&2    
    exit "${2-1}"  
}

if [[ ! -v STUDY_NAME ]]; then
    fail "missing required --study-name parameter"
fi

if [[ ! -v BFILE ]]; then
    fail "Missing required --bfile parameter"
fi

run_cmd() {
    cmd="$*"

    printf '%s\n' --------------------

    if [ "$VERBOSE" = "1" ]; then
	printf "$cmd\n"
    fi

    eval "$@"

    EXIT_CODE=$?

    if [[ $EXIT_CODE -gt 0 ]]; then
	echo "ERROR: command exited with nonzero status $EXIT_CODE"
    fi

    printf '%s\n' --------------------

    return $EXIT_CODE
}

# code starts here

VCF_DIRECTORY=/data/input/${STUDY_NAME}
run_cmd mkdir -p -v ${VCF_DIRECTORY}

run_cmd "sed 's/\r$//' ${BFILE}.bim | \
    awk '((\$5 == \"A\" && \$6 == \"T\") || \
          (\$5 == \"T\" && \$6 == \"A\") || \
          (\$5 == \"G\" && \$6 == \"C\") || \
          (\$5 == \"C\" && \$6 == \"G\")) { print \$2 }' > ambiguous"

LASTQC="lastQC"
run_cmd plink2 --bfile ${BFILE} \
    --nonfounders \
    --out "${LASTQC}" \
    --exclude "ambiguous" \
    --maf 0.01 \
    --hwe 0.000001 \
    --make-bed \

GENOME="b37"
run_cmd plink2 --bfile "${LASTQC}" \
    --nonfounders \
    --out "${LASTQC}${GENOME}" \
    --set-all-var-ids "@:#" \
    --rm-dup "exclude-mismatch" \
    --split-par "${GENOME}" \
    --set-hh-missing \
    --make-bed
LASTQC="${LASTQC}${GENOME}"

for CHR in {1..22} X; do
    run_cmd plink2 --bfile "${LASTQC}" \
        --nonfounders \
        --out "chr${CHR}" \
        --chr "${CHR}" \
        --export "vcf-4.2" "bgz" 
    run_cmd "vcf-sort chr${CHR}.vcf | bgzip -c > ${VCF_DIRECTORY}/chr${CHR}.vcf.gz"
done
