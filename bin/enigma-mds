#!/usr/bin/env bash

OPTS=$(getopt -o b:s: --long study-name:,bfile: -n 'enigma-mds' -- "$@")
eval set -- "$OPTS"

verbose=1

while true; do
    case "$1" in
    -b | --bfile)
        case "$2" in
        "") shift 2 ;;
        *)
            BFILE=$2
            shift 2
            ;;
        esac
        ;;
    -v | --verbose)
        verbose=1
        shift
        ;;
    --)
        shift
        break
        ;;
    *)
        echo "Internal error!"
        exit 1
        ;;
    esac
done

fail() {
    printf '%s\n' "$1" >&2
    exit "${2-1}"
}

if [[ ! -v BFILE ]]; then
    fail "Missing required --bfile parameter"
fi

run_cmd() {
    cmd="$*"

    printf '%s\n' --------------------

    if [ "${verbose}" = "1" ]; then
        printf "%s\n" "${cmd}"
    fi

    # shellcheck disable=SC2294
    eval "$@"

    exit_code=$?

    if [[ ${exit_code} -gt 0 ]]; then
        echo "ERROR: command exited with nonzero status ${exit_code}"
    fi

    printf '%s\n' --------------------

    return ${exit_code}
}

# code starts here

REFERENCE="/localdata/mds/HM3_b37"

run_cmd plink --bfile "${BFILE}" --make-bed --out "sorted"

run_cmd plink2 --bfile "sorted" --hwe "1e-6" --geno "0.05" --maf "0.01" --make-bed --out "filtered"

run_cmd "awk '{print \$2}' ${REFERENCE}.bim > external.snplist.txt"

run_cmd plink --bfile "filtered" --extract "external.snplist.txt" --make-bed --noweb --out "local"

run_cmd "sed 's/\\r\$//' \"filtered.bim\" | \
    awk '! ((\$5 == \"A\" && \$6 == \"T\") || \
          (\$5 == \"T\" && \$6 == \"A\") || \
          (\$5 == \"G\" && \$6 == \"C\") || \
          (\$5 == \"C\" && \$6 == \"G\")) { print \$2 }' > local.snplist.txt"

run_cmd plink --bfile "${REFERENCE}" --extract "local.snplist.txt" --make-bed --out "external"

run_cmd plink --bfile "local" --bmerge "external.bed" "external.bim" "external.fam" --make-bed --noweb --out "merge"

if [ -f "merge-merge.missnp" ]; then
    run_cmd plink --bfile "local" --flip "merge-merge.missnp" --make-bed --noweb --out "flipped"
    run_cmd mv "merge-merge.missnp" "merge-merge.flipped.missnp"

    run_cmd plink --bfile "flipped" --bmerge "external.bed" "external.bim" "external.fam" --make-bed --noweb --out "merge"
fi

if [ -f "merge-merge.missnp" ]; then
    run_cmd plink --bfile "flipped" --exclude "merge-merge.missnp" --make-bed --noweb --out "no-missnp"
    run_cmd plink --bfile "no-missnp" --bmerge "external.bed" "external.bim" "external.fam" --make-bed --noweb --out "merge"
fi

run_cmd plink --bfile "merge" --cluster --mind "0.05" --mds-plot "4" --extract "local.snplist.txt" --noweb --out "HM3_b37mds"
run_cmd "awk 'BEGIN{OFS=\",\"}; {print \$1, \$2, \$3, \$4, \$5, \$6, \$7}' HM3_b37mds.mds > HM3_b37mds2R.mds.csv"

run_cmd "Rscript - <<EOF
mds.cluster = read.csv(\"HM3_b37mds2R.mds.csv\", header=T)

colors=rep(\"red\", length(mds.cluster\\\$C1))
colors[which(mds.cluster\\\$FID == \"CEU\")] <- \"lightblue\"
colors[which(mds.cluster\\\$FID == \"CHB\")] <- \"brown\"
colors[which(mds.cluster\\\$FID == \"YRI\")] <- \"yellow\"
colors[which(mds.cluster\\\$FID == \"TSI\")] <- \"green\"
colors[which(mds.cluster\\\$FID == \"JPT\")] <- \"purple\"
colors[which(mds.cluster\\\$FID == \"CHD\")] <- \"orange\"
colors[which(mds.cluster\\\$FID == \"MEX\")] <- \"grey50\"
colors[which(mds.cluster\\\$FID == \"GIH\")] <- \"black\"
colors[which(mds.cluster\\\$FID == \"ASW\")] <- \"darkolivegreen\"
colors[which(mds.cluster\\\$FID == \"LWK\")] <- \"magenta\"
colors[which(mds.cluster\\\$FID == \"MKK\")] <- \"darkblue\"

pdf(file=\"mdsplot.pdf\", width=7, height=7)

plot(rev(mds.cluster\\\$C2), rev(mds.cluster\\\$C1),
col=rev(colors),
ylab=\"Dimension 1\", xlab=\"Dimension 2\", pch=20)

legend(\"topright\",
c(\"My Sample\", \"CEU\", \"CHB\", \"YRI\", \"TSI\", \"JPT\", \"CHD\", \"MEX\", \"GIH\", \"ASW\",\"LWK\", \"MKK\"),
fill=c(\"red\", \"lightblue\", \"brown\", \"yellow\", \"green\", \"purple\", \"orange\", \"grey50\", \"black\", \"darkolivegreen\", \"magenta\", \"darkblue\"))

dev.off()
EOF"
