#!/usr/bin/env bash

OPTS=$(getopt -o s:p:z --long study-name:,password:,zstd-compress -n 'make-archive' -- "$@")
eval set -- "$OPTS"

verbose=1
zsdt_compress=0
password="password"

while true; do
    case "$1" in
    -s | --study-name)
        case "$2" in
        "") shift 2 ;;
        *)
            study_name=$2
            shift 2
            ;;
        esac
        ;;
    -z | --zstd-compress)
        zsdt_compress=1
        shift 1
        ;;
    -p | --password)
        case "$2" in
        "") shift 2 ;;
        *)
            password=$2
            shift 2
            ;;
        esac
        ;;
    --)
        shift
        break
        ;;
    *)
        echo "Internal error!"
        exit 1
        ;;
    esac
done

fail() {
    printf '%s\n' "$1" >&2
    exit "${2-1}"
}

if [[ ! -v study_name ]]; then
    fail "Missing required --study-name parameter"
fi

run_cmd() {
    command="$*"

    printf '%s\n' --------------------

    if [ "${verbose}" = "1" ]; then
        printf "%s\n" "${command}"
    fi

    eval "${command}"

    exit_code=$?

    if [[ ${exit_code} -gt 0 ]]; then
        echo "ERROR: command exited with nonzero status ${exit_code}"
    fi

    printf '%s\n' --------------------

    return ${exit_code}
}

archive=${study_name}.zip

add_files() {
    if [[ $# -eq 0 ]]; then
        return
    fi
    run_cmd 7z a "${archive}" "$@"
}

extract_and_add() {
    encrypted_archive=$1
    tmp_dir=$(mktemp -d)

    # Extract encrypted archive
    if ! run_cmd extract-all.jar \
        --input-file "${encrypted_archive}" \
        --output-directory "${tmp_dir}" \
        --password "${password}"; then
        fail "Archive \"${archive}\" could not be extracted"
    fi

    find "${tmp_dir}" -type f -name "*.dose.vcf.gz" -print0 |
        while IFS= read -r -d '' v; do
            if [[ ${zsdt_compress} -eq 1 ]]; then
                # Apply zstd compression
                bgzip -c -d "${v}" | zstd -T0 -B0 -f --ultra -22 -o "${tmp_dir}/$(basename "${v}" .gz).zst"
                run_cmd rm -f "${v}"
            else
                # Index gzip compressed VCF
                run_cmd tabix -p vcf "${v}"
            fi
        done

    # Add extracted files to archive
    add_files "$(find "${tmp_dir}" -type f)"

    # Remove temporary directory
    run_cmd rm -rf "${tmp_dir}"
}

# Ensure that we have the correct output directory
if [ -d "/data/output" ]; then
    study_output_directory="/data/output/${study_name}"
elif [ -d "$(pwd)/output/${study_name}" ]; then
    study_output_directory="$(pwd)/output/${study_name}"
elif [ -d "$(pwd)/${study_name}" ]; then
    study_output_directory="$(pwd)/${study_name}"
else
    fail "Could not find imputation server output directory"
fi

add_files "${study_output_directory}/job.txt" "${study_output_directory}/std.out"
add_files "$(find "${study_output_directory}"/{qcreport,statisticDir,logfile} -type f)"

find "${study_output_directory}/local" -type f -name "chr_*.zip" -print0 |
    sort --zero-terminated --version-sort |
    while IFS= read -r -d '' a; do
        extract_and_add "${a}"
    done
