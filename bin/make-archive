#!/usr/bin/env bash

OPTS=$(getopt -o s:p:z --long study-name:,zstd-compress -n 'make-archive' -- "$@")
eval set -- "$OPTS"

verbose=1
zsdt_compress=0

while true; do
    case "$1" in
    -s | --study-name)
        case "$2" in
        "") shift 2 ;;
        *)
            study_name=$2
            shift 2
            ;;
        esac
        ;;
    -z | --zstd-compress)
        zsdt_compress=1
        shift 1
        ;;
    --)
        shift
        break
        ;;
    *)
        echo "Internal error!"
        exit 1
        ;;
    esac
done

fail() {
    printf '%s\n' "$1" >&2
    exit "${2-1}"
}

if [[ ! -v study_name ]]; then
    fail "Missing required --study-name parameter"
fi

run_cmd() {
    cmd="$*"

    printf '%s\n' --------------------

    if [ "${verbose}" = "1" ]; then
        printf "$cmd\n"
    fi

    ("$@")

    exit_code=$?

    if [[ ${exit_code} -gt 0 ]]; then
        echo "ERROR: command exited with nonzero status ${exit_code}"
    fi

    printf '%s\n' --------------------

    return ${exit_code}
}

#/data/
archive=${study_name}.zip

add_files() {
    if [[ $# -eq 0 ]]; then
        return
    fi
    run_cmd 7z a ${archive} $@
}

extract_and_add() {
    a=$1

    tmp_dir=$(mktemp -d)
    run_cmd 7z -aoa -o${tmp_dir} -ppassword x ${a}

    for v in $(find ${tmp_dir} -type f -name "*.dose.vcf.gz"); do
        if [[ ${zsdt_compress} -eq 1 ]]; then
            bgzip -c -d ${v} | zstd -T0 -B0 -f --ultra -22 -o "${tmp_dir}/$(basename ${v} .gz).zst"
            run_cmd rm ${v}
        else
            run_cmd tabix -p vcf ${v}
        fi
    done

    add_files \
        $(find ${tmp_dir} -type f)
    run_cmd rm -rf ${tmp_dir}
}
export -f extract_and_add

# /data/
output=output/${study_name}

add_files ${output}/job.txt ${output}/std.out
add_files $(find ${output}/{qcreport,statisticDir,logfile} -type f)

for a in $(find ${output}/local -type f -name "chr_*.zip"); do
    extract_and_add ${a}
done
